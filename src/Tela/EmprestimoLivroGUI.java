package Tela;

import Banco.BuscarDados;
import Banco.BusqueiDados;
import Banco.ExcluirDadosLivros;
import Banco.ExcluirEmp;
import Banco.PesqEmpresLivro;
import Classes.ControleDeAcesso;
import Classes.Emprestimo;
import Classes.NovoCliente;
import javax.swing.JOptionPane;
import Banco.SalvarEmprestimo;
import Classes.NovoLivro;
import Tela.TelaPrincipalGUI;
import java.sql.SQLException;
/**
 *
 * @author Família
 */
public class EmprestimoLivroGUI extends javax.swing.JFrame {

    NovoCliente obj;
    Emprestimo objEmp;
    ControleDeAcesso OBJ;
    NovoLivro OBJE;

    /**
     * Creates new form EmprestimoLivro
     */
    public EmprestimoLivroGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        dadosdolivro = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        codigolivro = new javax.swing.JTextField();
        titulo = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        BuscarCPF = new javax.swing.JButton();
        BuscarCodigoDoLivro = new javax.swing.JButton();
        statusemprestimo = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        funcionario = new javax.swing.JTextField();
        BuscarCpfFuncionario = new javax.swing.JButton();
        datadadevolucao = new javax.swing.JFormattedTextField();
        dataemprestimo = new javax.swing.JFormattedTextField();
        jLabel1 = new javax.swing.JLabel();
        classificacao = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        nomecompleto = new javax.swing.JTextField();
        cpf = new javax.swing.JFormattedTextField();
        cpffuncionario = new javax.swing.JFormattedTextField();
        jLabel3 = new javax.swing.JLabel();
        codigoemprestimo = new javax.swing.JTextField();
        CodigoEmprestimo = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        novo = new javax.swing.JButton();
        Limpar = new javax.swing.JButton();
        voltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Emprestimo ");
        setResizable(false);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(null);

        dadosdolivro.setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Codigo ");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 80, 70, 22);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Titulo");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(280, 80, 70, 22);

        codigolivro.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        codigolivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codigolivroActionPerformed(evt);
            }
        });
        jPanel1.add(codigolivro);
        codigolivro.setBounds(10, 110, 60, 30);

        titulo.setEditable(false);
        titulo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel1.add(titulo);
        titulo.setBounds(280, 110, 450, 30);

        jLabel19.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel19.setText("CPF do Cliente");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(10, 240, 120, 22);

        jLabel20.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel20.setText("Data do Empréstimo");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(240, 320, 170, 30);

        jLabel23.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel23.setText("Data da devolução");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(430, 320, 210, 22);

        BuscarCPF.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BuscarCPF.setText("Pesquisar Cliente");
        BuscarCPF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarCPFActionPerformed(evt);
            }
        });
        jPanel1.add(BuscarCPF);
        BuscarCPF.setBounds(180, 270, 160, 30);

        BuscarCodigoDoLivro.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BuscarCodigoDoLivro.setText("Pesquisar Cod");
        BuscarCodigoDoLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarCodigoDoLivroActionPerformed(evt);
            }
        });
        jPanel1.add(BuscarCodigoDoLivro);
        BuscarCodigoDoLivro.setBounds(90, 110, 160, 30);

        statusemprestimo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        statusemprestimo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Selecione um Status ", "   Autorizado" }));
        statusemprestimo.setEnabled(false);
        statusemprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                statusemprestimoActionPerformed(evt);
            }
        });
        jPanel1.add(statusemprestimo);
        statusemprestimo.setBounds(10, 350, 210, 28);

        jLabel21.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel21.setText("Status do Emprestimo");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(10, 322, 170, 20);

        jLabel16.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel16.setText("CPF do Funcionário");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(10, 170, 180, 20);

        jLabel17.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel17.setText("Funcionário");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(360, 170, 90, 22);

        funcionario.setEditable(false);
        funcionario.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel1.add(funcionario);
        funcionario.setBounds(360, 200, 350, 30);

        BuscarCpfFuncionario.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        BuscarCpfFuncionario.setText("Pesquisar Func");
        BuscarCpfFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BuscarCpfFuncionarioActionPerformed(evt);
            }
        });
        jPanel1.add(BuscarCpfFuncionario);
        BuscarCpfFuncionario.setBounds(170, 200, 160, 30);

        datadadevolucao.setEditable(false);
        try {
            datadadevolucao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(datadadevolucao);
        datadadevolucao.setBounds(430, 350, 140, 30);

        dataemprestimo.setEditable(false);
        try {
            dataemprestimo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(dataemprestimo);
        dataemprestimo.setBounds(240, 350, 150, 30);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Classificação");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(750, 80, 100, 22);

        classificacao.setEditable(false);
        classificacao.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel1.add(classificacao);
        classificacao.setBounds(750, 110, 360, 30);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Nome Completo");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(360, 240, 140, 22);

        nomecompleto.setEditable(false);
        nomecompleto.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel1.add(nomecompleto);
        nomecompleto.setBounds(360, 270, 340, 30);

        try {
            cpf.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(cpf);
        cpf.setBounds(10, 270, 160, 30);

        try {
            cpffuncionario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel1.add(cpffuncionario);
        cpffuncionario.setBounds(10, 200, 140, 30);

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Codigo ");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(10, 10, 60, 22);
        jPanel1.add(codigoemprestimo);
        codigoemprestimo.setBounds(10, 40, 60, 30);

        CodigoEmprestimo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        CodigoEmprestimo.setText("Pesquisar Código do Empréstimo");
        CodigoEmprestimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CodigoEmprestimoActionPerformed(evt);
            }
        });
        jPanel1.add(CodigoEmprestimo);
        CodigoEmprestimo.setBounds(90, 40, 290, 30);

        dadosdolivro.addTab("Dados do Emprestimo", jPanel1);

        jPanel6.add(dadosdolivro);
        dadosdolivro.setBounds(20, 10, 1150, 430);

        salvar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        salvar.setText("Salvar Empréstimo");
        salvar.setEnabled(false);
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        jPanel6.add(salvar);
        salvar.setBounds(230, 470, 180, 31);

        excluir.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        excluir.setText("Excluir Empréstimo");
        excluir.setEnabled(false);
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });
        jPanel6.add(excluir);
        excluir.setBounds(440, 470, 180, 31);

        editar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        editar.setText("Editar Empréstimo");
        editar.setEnabled(false);
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });
        jPanel6.add(editar);
        editar.setBounds(650, 470, 180, 31);

        novo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        novo.setText(" Novo Empréstimo");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });
        jPanel6.add(novo);
        novo.setBounds(10, 470, 180, 31);

        Limpar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Limpar.setText("Limpar Dados");
        Limpar.setEnabled(false);
        Limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparActionPerformed(evt);
            }
        });
        jPanel6.add(Limpar);
        Limpar.setBounds(860, 470, 140, 31);

        voltar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        voltar.setText("Voltar");
        voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                voltarActionPerformed(evt);
            }
        });
        jPanel6.add(voltar);
        voltar.setBounds(1040, 470, 120, 31);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 1190, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 525, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BuscarCPFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarCPFActionPerformed
        if (ValidarExcluir()) {
            try {
                if (PreencherObjExcluir()) {
                    BuscarDados BUSCANDO = new BuscarDados();
                    cpf.setText(obj.getCpf());
                    obj = BUSCANDO.BUSCAR(obj.getCpf());
                    if (obj == null) {
                        JOptionPane.showMessageDialog(null, "Por favor, digite um código válido");
                    } else {
                        cpf.setText(obj.getCpf());
                        nomecompleto.setText(obj.getNomecompleto());

                         // colocar os outros itens
                        //String CODIGO = Integer.toString(obj.getCodigo());                         
                        //codigo.setText(CODIGO);
                        editar.setEnabled(true);
                        excluir.setEnabled(true);
                    }
                }
            } catch (Exception Erro) {
                JOptionPane.showMessageDialog(null, "Erro na conexão!" + Erro);
            }
        }
    }//GEN-LAST:event_BuscarCPFActionPerformed

    private void BuscarCpfFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarCpfFuncionarioActionPerformed
        if (ValidarExcluirControle()) {
            try {
                if (PreencherOBJExcluirControle()) {
                    BusqueiDados BUSCANDO = new BusqueiDados();
                    cpffuncionario.setText(OBJ.getCpffuncionario());
                    OBJ = BUSCANDO.BUSCAR(OBJ.getCpffuncionario());
                    if (OBJ == null) {
                        JOptionPane.showMessageDialog(null, "Dados não encontrados!");
                    } else {
                        cpffuncionario.setText(OBJ.getCpffuncionario());
                        funcionario.setText(OBJ.getFuncionario());

                        editar.setEnabled(true);
                        excluir.setEnabled(true);
                    }
                }
            } catch (Exception Erro) {
                JOptionPane.showMessageDialog(null, "Erro na conexão!" + Erro);
            }
        }
    }//GEN-LAST:event_BuscarCpfFuncionarioActionPerformed

    private void BuscarCodigoDoLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BuscarCodigoDoLivroActionPerformed
        if (ValidarExcluirL()) {
            try {
                if (PreencherOBJEExcluirL()) {

                    ExcluirDadosLivros buscar = new ExcluirDadosLivros();
                    codigolivro.setText(OBJE.getCodigolivro());
                    OBJE = buscar.PesquisarExcluirLivro(OBJE.getCodigolivro());
                    
                    if (OBJE == null) {
                        JOptionPane.showMessageDialog(null, "Por favor, digite um código válido");
                    } else {
                        codigolivro.setText(OBJE.getCodigolivro());
                        classificacao.setText(OBJE.getClassificacao());
                        titulo.setText(OBJE.getTitulo());
                    }
                }
            } catch (Exception Erro) {
                JOptionPane.showMessageDialog(null, "Erro na Conexão " + Erro);
            }
        }


    }//GEN-LAST:event_BuscarCodigoDoLivroActionPerformed

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed

        Limpar();
        codigoemprestimo.requestFocus();
        codigolivro.setEditable(true);
        classificacao.setEditable(true);
        titulo.setEditable(true);
        cpffuncionario.setEditable(true);
        funcionario.setEditable(true);
        cpf.setEditable(true);
        nomecompleto.setEditable(true);
        statusemprestimo.setEnabled(true);
        dataemprestimo.setEditable(true);
        datadadevolucao.setEditable(true);

        salvar.setEnabled(true);
        BuscarCodigoDoLivro.setEnabled(true);
        BuscarCpfFuncionario.setEnabled(true);
        BuscarCPF.setEnabled(true);
    }//GEN-LAST:event_novoActionPerformed

    private void voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_voltarActionPerformed
        TelaPrincipalGUI tela = new TelaPrincipalGUI();
        tela.setVisible(true);
        dispose();
    }//GEN-LAST:event_voltarActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
        if (ValidarEmprestimo()) {
            try {
                if (PreencherObjEmp()) {
                    SalvarEmprestimo INSERIR = new SalvarEmprestimo();
                    INSERIR.SalvarEmp(objEmp);
                    JOptionPane.showMessageDialog(null, "Registro Salvo");
                }
            } catch (Exception Erro) {
                JOptionPane.showMessageDialog(null, "não salvo" + Erro);
            }
        }
        Limpar();
        /*novo.setEnabled(true);
        editar.setEnabled(true);
        excluir.setEnabled(true);*/
    }//GEN-LAST:event_salvarActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
 try{
        if(ValidarEmprestimo());
        if(PreencherObjEmp()){
            //Salvar no banco
            SalvarEmprestimo alterar = new SalvarEmprestimo();
            alterar.ALTERAR(objEmp);
            JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
        }
        
    }catch (Exception erro){
        JOptionPane.showMessageDialog(null, "Não Alterado" + erro);
    }
        nomecompleto.setEditable(false);
        cpf.setEditable(false);
        cpffuncionario.setEditable(false);
        funcionario.setEditable(false);
        titulo.setEditable(false);
        classificacao.setEditable(false);
        novo.setEnabled(true);
        editar.setEnabled(false);
        salvar.setEnabled(true);
        excluir.setEnabled(false);
        Limpar.setEnabled(true);
        dataemprestimo.setEditable(true);
        datadadevolucao.setEditable(true);
        Limpar();
    }//GEN-LAST:event_editarActionPerformed

    private void statusemprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_statusemprestimoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_statusemprestimoActionPerformed

    private void codigolivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codigolivroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_codigolivroActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
ExcluirEmp Apagar = new ExcluirEmp();
    try {
        if(Apagar.ConfirmarExcluirEmp(codigoemprestimo.getText())){
            JOptionPane.showMessageDialog(null, "Registro Apagado");
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Registro Não Apagado");
    }
    Limpar ();
        
    }//GEN-LAST:event_excluirActionPerformed

    private void LimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparActionPerformed
      Limpar();
    }//GEN-LAST:event_LimparActionPerformed

    private void CodigoEmprestimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CodigoEmprestimoActionPerformed
          if(ValidarExcluirE()){
            try{
                if(PreencherOBJEExcluirE()){
                    ExcluirEmp pesquisar = new ExcluirEmp();
                    objEmp.setCodigoemprestimo(codigoemprestimo.getText());
                    objEmp = pesquisar.PesquisarExcluirEmp(codigoemprestimo.getText());
                    if(objEmp == null){
                        JOptionPane.showMessageDialog(null, "Por favor, digite um código válido");
                    }else{
          
                        codigoemprestimo.setText(objEmp.getCodigoemprestimo());
                        codigolivro.setText(objEmp.getCodigolivro());
                        titulo.setText(objEmp.getTitulo());
                        classificacao.setText(objEmp.getClassificacao());
                        cpffuncionario.setText(objEmp.getCpffuncionario());
                        funcionario.setText(objEmp.getFuncionario());
                        cpf.setText(objEmp.getCpf());
                        nomecompleto.setText(objEmp.getNomecompleto());
                        statusemprestimo.setSelectedIndex(objEmp.getStatusemprestimo());
                        dataemprestimo.setText(objEmp.getDataemprestimo());
                        datadadevolucao.setText(objEmp.getDatadadevolucao());
                        
                        editar.setEnabled(true);
                        excluir.setEnabled(true);
                        dataemprestimo.setEditable(true);
                        datadadevolucao.setEditable(true);
                     }
                }
            } catch (Exception Erro){
                JOptionPane.showMessageDialog(null,"Erro na Conexão " + Erro);
            }
        }
                    
       

    }//GEN-LAST:event_CodigoEmprestimoActionPerformed

    /**
     * @param args the command line arguments
     */
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmprestimoLivroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmprestimoLivroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmprestimoLivroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmprestimoLivroGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmprestimoLivroGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BuscarCPF;
    private javax.swing.JButton BuscarCodigoDoLivro;
    private javax.swing.JButton BuscarCpfFuncionario;
    private javax.swing.JButton CodigoEmprestimo;
    private javax.swing.JButton Limpar;
    private javax.swing.JTextField classificacao;
    private javax.swing.JTextField codigoemprestimo;
    private javax.swing.JTextField codigolivro;
    private javax.swing.JFormattedTextField cpf;
    private javax.swing.JFormattedTextField cpffuncionario;
    private javax.swing.JTabbedPane dadosdolivro;
    private javax.swing.JFormattedTextField datadadevolucao;
    private javax.swing.JFormattedTextField dataemprestimo;
    private javax.swing.JButton editar;
    private javax.swing.JButton excluir;
    private javax.swing.JTextField funcionario;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTextField nomecompleto;
    private javax.swing.JButton novo;
    private javax.swing.JButton salvar;
    private javax.swing.JComboBox statusemprestimo;
    private javax.swing.JTextField titulo;
    private javax.swing.JButton voltar;
    // End of variables declaration//GEN-END:variables
public void Limpar() {
        codigoemprestimo.setText("");
        codigolivro.setText("");
        nomecompleto.setText("");
        funcionario.setText("");
        classificacao.setText("");
        titulo.setText("");
        cpffuncionario.setText("");
        cpf.setText("");
        nomecompleto.setText("");
        statusemprestimo.setSelectedIndex(0);
        dataemprestimo.setText("");
        datadadevolucao.setText("");
        
    }     
    private boolean ValidarExcluir() {
        if (cpf.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Informe o Cpf do Cliente!");
            cpf.requestFocus();
            return false;
        }
        return true;
    }

    private boolean ValidarExcluirControle() {
        if (cpffuncionario.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "informe o Cpf do funcionário!");
            cpffuncionario.requestFocus();
            return false;
        }
        return true;
    }

    private boolean PreencherObjExcluir() throws Exception {
        obj = new NovoCliente();
        obj.setCpf(cpf.getText());
        return true;

    }

    private boolean PreencherOBJExcluirControle() throws Exception {
        OBJ = new ControleDeAcesso();
        OBJ.setCpffuncionario(cpffuncionario.getText());
        return true;
    }
    
    private boolean ValidarEmprestimo() {
        if (codigoemprestimo.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite o codigo do emprestimo!");
            codigoemprestimo.requestFocus();
            return false;
        }
        if(codigolivro.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite o codigo do livro");
            codigolivro.requestFocus();
            return false;
        }
        if(classificacao.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O Tipo não apareceu? Por favor, entre em contato com o Departamento de TI");
            classificacao.requestFocus();
            return false;
        } 
        if(titulo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O Titulo não apareceu? Por favor, entre em contato com o Departamento de TI");
            titulo.requestFocus();
            return false;
        }  
        if(cpffuncionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Querido Colaborador, por favor, digite seu CPF");
            cpffuncionario.requestFocus();
            return false;
        }  
        if(funcionario.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Querido Colaborador, seu nome não apareceu? Por favor, entre em contato com o Departamento de TI");
            funcionario.requestFocus();
            return false;
        }  
        if(cpf.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Digite o CPF do cliente!");
            cpf.requestFocus();
            return false;
        }  
        if(nomecompleto.getText().equals("")){
            JOptionPane.showMessageDialog(null, "O nome do Cliente não apareceu? Por favor, entre em contato com o Departamento de TI");
            nomecompleto.requestFocus();
            return false;
        }  
        if(statusemprestimo.getSelectedIndex() == (0)){
            JOptionPane.showMessageDialog(null, "Selecione o status");
            statusemprestimo.requestFocus();
            return false;
        }  
        if(dataemprestimo.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Preencha a data do emprestimo");
            dataemprestimo.requestFocus();
            return false;
        }  
        if(datadadevolucao.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Preencha a data prevista da devolução");
            datadadevolucao.requestFocus();
            return false;
        }          
        return true;
    }

    private boolean PreencherObjEmp() throws Exception {
        objEmp = new Emprestimo();
        objEmp.setCodigoemprestimo(codigoemprestimo.getText());
        objEmp.setCodigolivro(codigolivro.getText());
        objEmp.setTitulo(titulo.getText());
        objEmp.setClassificacao(classificacao.getText());
        objEmp.setCpffuncionario(cpffuncionario.getText());
        objEmp.setFuncionario(funcionario.getText());
        objEmp.setCpf(cpf.getText());
        objEmp.setNomecompleto(nomecompleto.getText());
        objEmp.setStatusemprestimo(statusemprestimo.getSelectedIndex());
        objEmp.setDataemprestimo(dataemprestimo.getText());
        objEmp.setDatadadevolucao(datadadevolucao.getText());
        
        return true;

    }
    private boolean ValidarExcluirL(){
    if(codigolivro.getText(). equals("")){
        JOptionPane.showMessageDialog(null,"Informe o codigo do livro!");
        codigolivro.requestFocus();
        return false;
    }
    return true;
    }
private boolean PreencherOBJEExcluirL() throws Exception{
    OBJE = new  NovoLivro();
    OBJE.setCodigolivro(codigolivro.getText());
        return true;

    }
private boolean ValidarExcluirE(){
    if(codigoemprestimo.getText(). equals("")){
        JOptionPane.showMessageDialog(null,"Informe o codigo do Emprestimo!");
        codigoemprestimo.requestFocus();
        return false;
    }
    return true;
    }
private boolean PreencherOBJEExcluirE() throws Exception{
    objEmp = new Emprestimo();
    objEmp.setCodigoemprestimo(codigoemprestimo.getText());    
     
    return true;
}
}



