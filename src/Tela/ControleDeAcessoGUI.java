/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Tela;

import Banco.EnviandoDadosDeAcesso;
import Banco.ExcluindoDadosAcesso;
import Classes.ControleDeAcesso;
import Tela.TelaPrincipalGUI;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author Família
 */
public class ControleDeAcessoGUI extends javax.swing.JFrame {

    ControleDeAcesso obj;
    /**
     * Creates new form ControleDeAcessoGUI
     */
    public ControleDeAcessoGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel6 = new javax.swing.JPanel();
        cancelar = new javax.swing.JButton();
        novo = new javax.swing.JButton();
        salvar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        editar = new javax.swing.JButton();
        Voltar = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        pesquisar = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        funcionario = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        statusfuncionario = new javax.swing.JComboBox();
        cpffuncionario = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Novo Usuario");
        setResizable(false);

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setLayout(null);

        cancelar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        cancelar.setText("Limpar");
        cancelar.setEnabled(false);
        cancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelarActionPerformed(evt);
            }
        });
        jPanel6.add(cancelar);
        cancelar.setBounds(830, 350, 110, 31);

        novo.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        novo.setText("Novo");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });
        jPanel6.add(novo);
        novo.setBounds(80, 350, 73, 30);

        salvar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        salvar.setText("Salvar");
        salvar.setEnabled(false);
        salvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salvarActionPerformed(evt);
            }
        });
        jPanel6.add(salvar);
        salvar.setBounds(400, 350, 130, 30);

        excluir.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        excluir.setText("Excluir");
        excluir.setEnabled(false);
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });
        jPanel6.add(excluir);
        excluir.setBounds(600, 350, 140, 30);

        editar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        editar.setText("Editar");
        editar.setEnabled(false);
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });
        jPanel6.add(editar);
        editar.setBounds(210, 350, 100, 31);

        Voltar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        Voltar.setText("Voltar");
        Voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VoltarActionPerformed(evt);
            }
        });
        jPanel6.add(Voltar);
        Voltar.setBounds(1040, 350, 120, 31);

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cadastro Funcionário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N
        jPanel2.setLayout(null);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("CPF");
        jPanel2.add(jLabel5);
        jLabel5.setBounds(10, 60, 50, 20);

        pesquisar.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        pesquisar.setText("Pesquisar");
        pesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pesquisarActionPerformed(evt);
            }
        });
        jPanel2.add(pesquisar);
        pesquisar.setBounds(230, 90, 150, 31);

        jLabel11.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel11.setText("Email");
        jPanel2.add(jLabel11);
        jLabel11.setBounds(10, 150, 60, 22);

        email.setEditable(false);
        email.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jPanel2.add(email);
        email.setBounds(10, 180, 320, 30);

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Funcionário");
        jPanel2.add(jLabel7);
        jLabel7.setBounds(530, 60, 160, 22);

        funcionario.setEditable(false);
        funcionario.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        funcionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                funcionarioActionPerformed(evt);
            }
        });
        jPanel2.add(funcionario);
        funcionario.setBounds(530, 90, 570, 30);

        jLabel12.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel12.setText("Status");
        jPanel2.add(jLabel12);
        jLabel12.setBounds(530, 150, 120, 22);

        statusfuncionario.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        statusfuncionario.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "   Selecione ", "   Ativo ", "   Bloqueado" }));
        statusfuncionario.setEnabled(false);
        jPanel2.add(statusfuncionario);
        statusfuncionario.setBounds(530, 180, 180, 30);

        try {
            cpffuncionario.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("###.###.###-##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        jPanel2.add(cpffuncionario);
        cpffuncionario.setBounds(10, 90, 200, 30);

        jPanel6.add(jPanel2);
        jPanel2.setBounds(10, 10, 1190, 310);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1260, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
    cpffuncionario.setEditable(true);
    cpffuncionario.requestFocus();
    funcionario.setEditable(true);
    statusfuncionario.setEnabled(true);
    email.setEditable(true);
    
   
    salvar.setEnabled(true);
    pesquisar.setEnabled(true);
    
   Limpar ();
    }//GEN-LAST:event_novoActionPerformed

    private void pesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pesquisarActionPerformed
    if (ValidarExcluir()){
        try{
            if (PreencherobjExcluir()){
                ExcluindoDadosAcesso EXCLUIR = new ExcluindoDadosAcesso ();
                obj.setCpffuncionario(cpffuncionario.getText());
                obj = EXCLUIR.PesquisarExcluir(cpffuncionario.getText());
                if (obj == null){
                 JOptionPane.showMessageDialog (null,"O cpf do funcionário não foi encontrado em nossos registros!");
                }else{
                cpffuncionario.setText(obj.getCpffuncionario());
                funcionario.setText(obj.getFuncionario());
                email.setText(obj.getEmail());
                statusfuncionario.setSelectedIndex(obj.getStatusfuncionario());
                
                
                    cpffuncionario.setEditable(false);
                    funcionario.setEditable(true);
                    statusfuncionario.setEnabled(true);
                    email.setEditable(true);
                
                
                editar.setEnabled(true);
                excluir.setEnabled(true);
                }
            }
        } catch (Exception Erro) {
            JOptionPane.showMessageDialog(null,"Registro não foi salvo");
        }
    }        
    }//GEN-LAST:event_pesquisarActionPerformed

    private void VoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_VoltarActionPerformed
        TelaPrincipalGUI tela = new TelaPrincipalGUI ();
        tela.setVisible(true);
        dispose ();

    }//GEN-LAST:event_VoltarActionPerformed

    private void funcionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_funcionarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_funcionarioActionPerformed

    private void cancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelarActionPerformed
    Limpar ();
    }//GEN-LAST:event_cancelarActionPerformed

    private void salvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salvarActionPerformed
    if (ValidarSalvar()){
        try{
            if(Preencherobj()){
                EnviandoDadosDeAcesso INSERIR = new EnviandoDadosDeAcesso();
                INSERIR.Salvar(obj);
                JOptionPane.showMessageDialog(null,"Registro Salvo");
            }
        }catch (Exception Erro){
            JOptionPane.showMessageDialog(null,"Registro não foi salvo" + Erro);
            
        }
    }
    Limpar ();
    novo.setEnabled(true);
    editar.setEnabled(true);
    excluir.setEnabled(true);
    }//GEN-LAST:event_salvarActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
    ExcluindoDadosAcesso Apagar = new ExcluindoDadosAcesso ();
    try{
        if(Apagar.ConfirmandoExclusao(cpffuncionario.getText())){
         JOptionPane.showMessageDialog(null,"O registro foi excluido!");   
        }
    }catch (SQLException ex){
        JOptionPane.showMessageDialog(null,"O registro não foi excluido");
    }
    Limpar();
    }//GEN-LAST:event_excluirActionPerformed

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
try{
        if(ValidarSalvar());
        if(Preencherobj()){
            //Salvar no banco
            EnviandoDadosDeAcesso alterar = new EnviandoDadosDeAcesso();
            alterar.Modificar(obj);
            JOptionPane.showMessageDialog(null, "Alterado com sucesso!");
        }
        
    }catch (Exception erro){
        JOptionPane.showMessageDialog(null, "Não Alterado" + erro);
    }
      
        
        
        
        
        
    novo.setEnabled(true);
    editar.setEnabled(false);
    salvar.setEnabled(true);
    excluir.setEnabled(false);
    cancelar.setEnabled(true);
    Limpar ();
    }//GEN-LAST:event_editarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ControleDeAcessoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ControleDeAcessoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ControleDeAcessoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ControleDeAcessoGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ControleDeAcessoGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Voltar;
    private javax.swing.JButton cancelar;
    private javax.swing.JFormattedTextField cpffuncionario;
    private javax.swing.JButton editar;
    private javax.swing.JTextField email;
    private javax.swing.JButton excluir;
    private javax.swing.JTextField funcionario;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JButton novo;
    private javax.swing.JButton pesquisar;
    private javax.swing.JButton salvar;
    private javax.swing.JComboBox statusfuncionario;
    // End of variables declaration//GEN-END:variables
private void Limpar (){
  cpffuncionario.setText("");
  funcionario.setText("");
  email.setText("");
  statusfuncionario.setSelectedIndex(0);
 
  
}
private boolean ValidarSalvar (){
    if (cpffuncionario.getText().equals("")){
        JOptionPane.showMessageDialog(null,"Informe seu CPF!");
        cpffuncionario.requestFocus();
        return false;
    }
   if (funcionario.getText().equals("")){
    JOptionPane.showMessageDialog(null,"Informe seu nome completo!");
    funcionario.requestFocus();
    return false;
}
   if (email.getText().equals("")){
       JOptionPane.showMessageDialog(null,"Informe seu e-mail!");
       email.requestFocus();
       return false;
   }
   
   if (statusfuncionario.getSelectedIndex() == (0)){
       JOptionPane.showMessageDialog(null,"Selecione um status!");
       statusfuncionario.requestFocus();
       return false;
   
  
   }
   
   return true;
}
private boolean Preencherobj() throws Exception {
    obj = new ControleDeAcesso ();
    obj.setCpffuncionario(cpffuncionario.getText());
    obj.setFuncionario(funcionario.getText());
    obj.setEmail(email.getText());
    obj.setStatusfuncionario(statusfuncionario.getSelectedIndex());
    return true;
}
private boolean PreencherobjExcluir () throws Exception {
    obj = new ControleDeAcesso ();
    obj.setCpffuncionario(cpffuncionario.getText());
    return true;
}
private boolean ValidarExcluir (){
    if (cpffuncionario.getText().equals("")){
        JOptionPane.showMessageDialog(null,"Informe seu CPF!");
        cpffuncionario.requestFocus();
        return false;
    }
    return true;
}
}